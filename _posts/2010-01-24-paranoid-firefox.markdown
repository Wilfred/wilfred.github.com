--- 
layout: post
title: Paranoid Firefox
tags: 
- Essays
---
The web is a wild place. What is the most secure and private configuration that we can wring out of Firefox?
<h3>Preventing Exploits</h3>
The most common way of exploiting Firefox is, ironically, third party plugins. One example of this is the Eleonore exploit kit, which has a good description <a href="http://www.krebsonsecurity.com/2010/01/a-peek-inside-the-eleonore-browser-exploit-kit/">here</a>. This has become such an issue that there now exists a <a href="http://www.mozilla.com/en-US/plugincheck/">plugin check facility</a> on the Mozilla site to easily check all plugins are up-to-date.

As for Firefox itself, the most common source of exploits is JavaScript. If you browse through the <a href="http://www.mozilla.org/security/announce/">Mozilla security advisories</a>, you will find many of these exploits can be stopped by disabling JavaScript. JavaScript vulnerabilities can be protected against by using <a href="https://addons.mozilla.org/en-US/firefox/addon/722">NoScript</a>. NoScript is not a panacea, since this can often be circumvented by a website using an 'enable JavaScript to continue' page. However, it puts the user back in control, and also offers protection against XSS and ClickJacking.

Ideally, the whole browser would be sandboxed (and indeed, many researchers use VMs for this). This isn't yet an option for Firefox, but make sure you enable DEP (and ASLR where possible) on your OS.
<h2>Privacy</h2>
Privacy, as with many things in security, is not an absolute. The level of privacy desired varies, so I will consider all the data that surfing exposes, namely cookies, cache, search terms, user agent string and IP address. Nonetheless, you must also consider sites that require authentication -- even a perfectly anonymised browser is no good if you login, especially if you use your real name.
<h3>Cookies</h3>
Cookies are the most common way for websites to store data on your system that identifies you. Firefox offers two levels of control of cookies, distinguishing between third party and first party cookies. Third party cookies are much more likely to be tracking cookies and can be disabled or set to be deleted at the end of the session (Preferences &gt; Privacy &gt; Keep Until). A stronger form of privacy may be achieved by deleting all cookies at the end of each session (Preferences &gt; Privacy &gt; Clear History When Firefox Closes Settings &gt; Tick Cookies). This does not stop any sites working, since the only useful purpose of non-session cookies is staying logged in, and the remember password facilities are a perfectly adequate replacement.

<a href="http://www.schneier.com/blog/archives/2009/08/flash_cookies.html">Flash cookies</a> are also often overlooked. These are cookie-like pieces of local data that are handled by the Flash plugin and hence immune to your cookie removal settings. There is a simple solution here, the <a href="https://addons.mozilla.org/en-US/firefox/addon/6623">BetterPrivacy add-on</a> enables you to view and delete all these so-called 'SuperCookies'.
<h3>Search Engines</h3>
Another privacy concern is your search engine. This is probably Google. Other search engines have had <a href="http://en.wikipedia.org/wiki/AOL_search_data_scandal">privacy scandals</a> and Google's CEO has made a number of <a>interesting quotes</a>. Sadly, moving to other search engines usually gives you less accurate search results. My preferred solution here is Scroogle (<a href="http://www.scroogle.org/cgi-bin/scraper.htm">HTTP version</a> or even better the <a href="https://ssl.scroogle.org/">HTTPS version</a>), which is a Google anonymiser. You can add easily <a href="https://addons.mozilla.org/en-US/firefox/addon/12506">use Scroogle in your search bar</a>.

Of course, this then raises the question: Why should I trust Scroogle? It's "turtles all the way down" -- you are forced to trust someone unless you run your own spider and search engine. In Scroogle's favour is their privacy statement which says "we don't save search terms, we don't use cookies, and we delete IP logs after 48 hours". This is a substantial improvement over Google's <a href="http://www.google.com/intl/en/privacypolicy.html">privacy policy</a>.

However, this isn't the only source of data that is sent to Google. If you type the string "the free encyclopedia" into the address bar and press enter, this will be used as a Google search term with the 'I feel lucky' option. However, there is no need for this to be Google. To change this to Scroogle, go to about:config &gt; keyword.URL &gt; and change it to 'http://ssl.scroogle.org/cgi-bin/nbbw.cgi?Gw='.

Finally, Google is contacted to obtain lists of sites that are are suspected web forgeries or attack sites as part of Firefox's <a href="http://www.mozilla.com/en-US/firefox/phishing-protection/">Phishing protection</a>. Unlike IE, Firefox only compares the current URL with this locally stored list so Google is not informed of every URL you visit. However, many attack sites are compromised sites that are quickly cleaned up. When the user visits an 'evil' site in the blacklist, Firefox queries Google to see whether the site is still blacklisted. This is probably not a security issue, but you can disable the phishing protection in Preferences &gt; Security if it's a concern. To see what data is sent, load up your favourite traffic sniffer and visit the <a href="https://itisatrap.org/firefox/its-an-attack.html">test page</a>.
<h3>Cache</h3>
Generally, the cache isn't a problem. However, I'm aware that at least two researchers are researching into tracking users using only the cache (using <a href="http://joshduck.com/blog/2010/01/29/abusing-the-cache-tracking-users-without-cookies/">iframes</a> or <a href="http://kuza55.blogspot.com/2007/05/tracking-users-with-cache-data.html">ETags</a>). The truly paranoid Firefox user will therefore want Firefox to regularly clear its cache.
<h3>History</h3>
History shouldn't be something you have to worry about. Unfortunately, there's a nasty feature interaction with CSS in most browsers that <a href="http://jeremiahgrossman.blogspot.com/2006/08/i-know-where-youve-been.html">leaks your history</a>, so be aware.
<h3>User Agents</h3>
Even when you don't allow the remote host to store any identifying data on your system, the remote host is free to keep logs on its own system. This then enables the remote system to be able to identify you uniquely. Every site you visit receives information about the browser name, version, plugin versions, operating system and various other strings. This is a lot of information and is often sufficient to identify you uniquely. The EFF has a fantastic service called <a href="http://panopticlick.eff.org/">Panopticlick</a> which shows how much data you share and to what extent it exposes you.

The solution to maintaining privacy here is to change these strings to the most common values. There is no complete solution, but add-ons like <a href="https://addons.mozilla.org/en-US/firefox/addon/967">Modify Headers</a> exist to allow you to control a number of these strings. If you experiment with Panopticlick you will also find that more of these strings are exposed when you permit JavaScript and Flash, so again here NoScript helps you.

<h3>IP Addresses</h3>

Tracing users by IP address is an inexact science. Dynamic IPs, NAT and proxies all naturally occur and make tracking difficult. However the average user is only behind NAT to share their Internet connection with a small number of people. ISPs also keep sufficient logs that users can often be traced later given an IP address and a time of access.

Changing your IP can be achieved in a number of ways. One common option is a proxy, and lists of many open proxies exist online (presumably compromised systems). A popular alternative option (particularly with dissidents) is <a href="http://psiphon.ca/">Psiphon</a>, which arranges for someone else to run a proxy server which you can access in an encrypted manner. Proxies may also be chained, so that each node in the chain only knows its immediate predecessor (as well as all the following nodes).

A more extreme way of hiding your IP address is <a href="https://www.torproject.org/">Tor</a>, an onion routing scheme. This offers a fairly strong form of anonymity, but browsing can be painfully slow (depending on where in the world you are). Tor is also even more susceptible to problems with plugins not honouring proxy settings, so any dynamic site may compromise your anonymity.

As with any proxying system, you gain anonymity at the expense of also gaining visibility (a Tor end-node operator may <a href="http://web.archive.org/web/20071029033104/www.derangedsecurity.com/time-to-reveal%E2%80%A6/">keep logs out of simple curiosity</a>). The proxy may well be keeping logs (although your ISP is almost certainly also doing this anyway) and any HTTP traffic may be intercepted by the proxy. With any proxy technology you need to understand its limitations. In many cases you are safe if you use HTTPS.
<h3>DNS</h3>
For the sake of completeness, I will also consider DNS. Every time you visit a site, your DNS server (typically run by your ISP) receives a request for the IP address of that domain. Since the release of Firefox 3.5, Firefox uses <a href="https://developer.mozilla.org/en/controlling_dns_prefetching">DNS prefetching</a> (following the <a href="http://blog.chromium.org/2008/09/dns-prefetching-or-pre-resolving.html">example of Google's Chrome</a>). Links on the current page which point to other domains will also have their domains looked up to minimise latency. The best case scenario is that this prefetching introduces some noise into any logs made by the DNS server. The worst case scenario is that it enables a finer granularity of information to be inferred from the logs -- if a.com/a.html is the only page that has a link to b.com, and a user requests DNS records for both a.com and b.com in a short period of time, we can infer that he visited a.html.

There are no easy solutions for increased DNS privacy. Very aggressive DNS caching will prevent the remote DNS server learning visit frequency for sites. Alternatively many proxying technologies enable the DNS lookups to also use the proxy.
<h3>Conclusions</h3>
You may well not wish to put into practice all these suggestions. Nonetheless, awareness of what risks you are taking is important. If you have any doubts about what data is going to and from your browser, sniff the traffic and examine it yourself.
